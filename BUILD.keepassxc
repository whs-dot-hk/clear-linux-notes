load("@rules_foreign_cc//tools/build_defs:cmake.bzl", "cmake_external")

filegroup(
    name = "all",
    srcs = glob(["**"]),
)

rpms = [
    "@libX11//file",
    "@libX11-devel//file",
    "@libXau//file",
    "@libargon2//file",
    "@libargon2-devel//file",
    "@libgcrypt//file",
    "@libgcrypt-devel//file",
    "@libglvnd//file",
    "@libglvnd-glx//file",
    "@libgpg-error//file",
    "@libgpg-error-devel//file",
    "@libsodium//file",
    "@libsodium-devel//file",
    "@libxcb//file",
    "@qrencode-devel//file",
    "@qrencode-libs//file",
    "@qt5-linguist//file",
    "@qt5-qtbase//file",
    "@qt5-qtbase-devel//file",
    "@qt5-qtbase-gui//file",
    "@qt5-qtbase-private-devel//file",
    "@qt5-qtsvg//file",
    "@qt5-qtsvg-devel//file",
    "@xorg-x11-proto-devel//file",
]

genrule(
    name = "dependencies",
    srcs = rpms,
    outs = [
        "dependencies.tar.gz",
    ],
    cmd = "\n".join(
        ["rpm2cpio $(location %s) | cpio -idu --quiet" % rpm for rpm in rpms] + [
            "tar -czf $@ usr",
        ],
    ),
)

keepassxc_prefix_script = "\n".join([
    "tar -xzf $$EXT_BUILD_DEPS$$/bin/dependencies.tar.gz -C $$EXT_BUILD_DEPS$$/bin",
    "patchelf --set-rpath $$EXT_BUILD_DEPS$$/bin/usr/lib64 $$EXT_BUILD_DEPS$$/bin/usr/lib64/qt5/bin/lrelease",
])

cmake_external(
    name = "binary",
    lib_source = ":all",
    cache_entries = {
        "WITH_XC_ALL": "OFF",
        "CMAKE_PREFIX_PATH": "$$EXT_BUILD_DEPS$$/bin/usr",
        "WITH_XC_DOCS": "OFF",
    },
    prefix_script = keepassxc_prefix_script,
    make_commands = [
        "grep -rl lX11 . | xargs sed -i 's|-lX11|'$$EXT_BUILD_DEPS$$'/bin/usr/lib64/libX11.so.6|g'",
        "make",
        "make install",
    ],
    binaries = [
        "keepassxc",
    ],
    tools_deps = [
        "@patchelf//:patchelf",
        ":dependencies.tar.gz",
    ],
    visibility = ["//visibility:public"],
)
