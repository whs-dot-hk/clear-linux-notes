From 5c2c90f9ff78b87f878b9d911cee2a6ad6a23fb4 Mon Sep 17 00:00:00 2001
From: whs <hswongac@gmail.com>
Date: Sun, 27 Sep 2020 15:55:14 +0800
Subject: [PATCH] Add attribure prefix_script and example

---
 README.md                                     |  3 ++
 .../build_ffmpeg_with_prefix_script/BUILD     |  0
 .../BUILD.ffmpeg                              | 31 +++++++++++++++
 .../BUILD.x264                                | 38 +++++++++++++++++++
 .../build_ffmpeg_with_prefix_script/README.md |  4 ++
 .../build_ffmpeg_with_prefix_script/WORKSPACE | 26 +++++++++++++
 tools/build_defs/framework.bzl                | 13 +++++--
 7 files changed, 111 insertions(+), 4 deletions(-)
 create mode 100644 examples/build_ffmpeg_with_prefix_script/BUILD
 create mode 100644 examples/build_ffmpeg_with_prefix_script/BUILD.ffmpeg
 create mode 100644 examples/build_ffmpeg_with_prefix_script/BUILD.x264
 create mode 100644 examples/build_ffmpeg_with_prefix_script/README.md
 create mode 100644 examples/build_ffmpeg_with_prefix_script/WORKSPACE

diff --git a/README.md b/README.md
index 6f88f1e..35bb27c 100644
--- a/README.md
+++ b/README.md
@@ -270,6 +270,9 @@ attrs: {
     # Not used by the shell script part in cc_external_rule_impl.
     "additional_tools": attr.label_list(mandatory = False, allow_files = True, default = []),
     #
+    # Optional part of the shell script to be added before the configure command
+    "prefix_script": attr.string(mandatory = False),
+    #
     # Optional part of the shell script to be added after the make commands
     "postfix_script": attr.string(mandatory = False),
     # Optinal make commands, defaults to ["make", "make install"]
diff --git a/examples/build_ffmpeg_with_prefix_script/BUILD b/examples/build_ffmpeg_with_prefix_script/BUILD
new file mode 100644
index 0000000..e69de29
diff --git a/examples/build_ffmpeg_with_prefix_script/BUILD.ffmpeg b/examples/build_ffmpeg_with_prefix_script/BUILD.ffmpeg
new file mode 100644
index 0000000..8e2fcf9
--- /dev/null
+++ b/examples/build_ffmpeg_with_prefix_script/BUILD.ffmpeg
@@ -0,0 +1,31 @@
+load("@rules_foreign_cc//tools/build_defs:configure.bzl", "configure_make")
+
+filegroup(
+    name = "all",
+    srcs = glob(["**"]),
+)
+
+configure_make(
+    name = "library",
+    lib_source = ":all",
+    configure_options = [
+        "--disable-static",
+        "--enable-shared",
+        "--enable-libx264",
+        "--enable-gpl",
+    ],
+    deps = [
+        "@x264//:library",
+    ],
+    shared_libraries = [
+        "libavcodec.so",
+        "libavdevice.so",
+        "libavfilter.so",
+        "libavformat.so",
+        "libavutil.so",
+        "libpostproc.so",
+        "libswresample.so",
+        "libswscale.so",
+    ],
+    visibility = ["//visibility:public"],
+)
diff --git a/examples/build_ffmpeg_with_prefix_script/BUILD.x264 b/examples/build_ffmpeg_with_prefix_script/BUILD.x264
new file mode 100644
index 0000000..8ff2370
--- /dev/null
+++ b/examples/build_ffmpeg_with_prefix_script/BUILD.x264
@@ -0,0 +1,38 @@
+load("@rules_foreign_cc//tools/build_defs:configure.bzl", "configure_make")
+
+filegroup(
+    name = "all",
+    srcs = glob(["**"], exclude = ["configure"]) + [
+        "//:configure.modified",
+    ],
+)
+
+genrule(
+    name = "modified_configure",
+    srcs = [
+        "configure",
+    ],
+    outs = ["configure.modified"],
+    cmd = "\n".join([
+        "cp $< $@",
+        "sed -i 's|ASFLAGS=\"$$ASFLAGS -DARCH_X86_64|ASFLAGS=\"$$NASMFLAGS -DARCH_X86_64|g' $@",
+    ]),
+)
+
+x264_prefix_script = """
+find -L $$EXT_BUILD_ROOT$$ -type f -name "*.modified" -exec sh -c "cp {} $$EXT_BUILD_ROOT$$/external/x264/\$(basename {} .modified)" \;
+"""
+
+configure_make(
+    name = "library",
+    lib_source = ":all",
+    configure_options = [
+        "--enable-shared",
+        "--extra-cflags='-Dredacted=\"\\\"redacted\\\"\"'",
+    ],
+    prefix_script = x264_prefix_script,
+    shared_libraries = [
+        "libx264.so",
+    ],
+    visibility = ["//visibility:public"],
+)
diff --git a/examples/build_ffmpeg_with_prefix_script/README.md b/examples/build_ffmpeg_with_prefix_script/README.md
new file mode 100644
index 0000000..8fd696e
--- /dev/null
+++ b/examples/build_ffmpeg_with_prefix_script/README.md
@@ -0,0 +1,4 @@
+```sh
+bazel build @ffmpeg//:library
+LD_LIBRARY_PATH=$(find -L bazel-out -type d -path "**/copy_*/*/lib" | sed -e ':a;N;$!ba;s|\n|:|g') firefox
+```
diff --git a/examples/build_ffmpeg_with_prefix_script/WORKSPACE b/examples/build_ffmpeg_with_prefix_script/WORKSPACE
new file mode 100644
index 0000000..cb538e7
--- /dev/null
+++ b/examples/build_ffmpeg_with_prefix_script/WORKSPACE
@@ -0,0 +1,26 @@
+workspace(name = "build_ffmpeg_with_prefix_script")
+
+local_repository(
+    name = "rules_foreign_cc",
+    path = "../..",
+)
+
+load("@rules_foreign_cc//:workspace_definitions.bzl", "rules_foreign_cc_dependencies")
+
+rules_foreign_cc_dependencies()
+
+load("@bazel_tools//tools/build_defs/repo:git.bzl", "new_git_repository")
+
+new_git_repository(
+    name = "x264",
+    branch = "master",
+    build_file = "@//:BUILD.x264",
+    remote = "https://code.videolan.org/videolan/x264.git",
+)
+
+new_git_repository(
+    name = "ffmpeg",
+    branch = "master",
+    build_file = "@//:BUILD.ffmpeg",
+    remote = "https://git.ffmpeg.org/ffmpeg.git",
+)
diff --git a/tools/build_defs/framework.bzl b/tools/build_defs/framework.bzl
index 7277161..7340b1f 100644
--- a/tools/build_defs/framework.bzl
+++ b/tools/build_defs/framework.bzl
@@ -50,6 +50,9 @@ CC_EXTERNAL_RULE_ATTRIBUTES = {
     # Not used by the shell script part in cc_external_rule_impl.
     "additional_tools": attr.label_list(mandatory = False, allow_files = True, default = []),
     #
+    # Optional part of the shell script to be added before the configure command
+    "prefix_script": attr.string(mandatory = False),
+    #
     # Optional part of the shell script to be added after the make commands
     "postfix_script": attr.string(mandatory = False),
     # Optinal make commands, defaults to ["make", "make install"]
@@ -185,10 +188,11 @@ def cc_external_rule_impl(ctx, attrs):
         will be installed
 
         These variables should be used by the calling rule to refer to the created directory structure.
-     4) calls 'attrs.create_configure_script'
-     5) calls 'attrs.make_commands'
-     6) calls 'attrs.postfix_script'
-     7) replaces absolute paths in possibly created scripts with a placeholder value
+     4) calls 'attrs.prefix_script'
+     5) calls 'attrs.create_configure_script'
+     6) calls 'attrs.make_commands'
+     7) calls 'attrs.postfix_script'
+     8) replaces absolute paths in possibly created scripts with a placeholder value
 
      Please see cmake.bzl for example usage.
 
@@ -254,6 +258,7 @@ def cc_external_rule_impl(ctx, attrs):
         _print_env(),
         "\n".join(_copy_deps_and_tools(inputs)),
         "cd $$BUILD_TMPDIR$$",
+        attrs.prefix_script or "",
         attrs.create_configure_script(ConfigureParameters(ctx = ctx, attrs = attrs, inputs = inputs)),
         "\n".join(make_commands),
         attrs.postfix_script or "",
-- 
2.29.2

